<?xml version="1.0"?>
<xbundle>
  <metadata>
    <policies semester="2013_Spring">
      <gradingpolicy>{"GRADE_CUTOFFS": {"Pass": 0.5}, "GRADER": [{"min_count": 12, "weight": 0.15, "type": "Homework", "drop_count": 2, "short_label": "HW"}, {"min_count": 12, "type": "Lab", "drop_count": 2, "weight": 0.15}, {"min_count": 1, "weight": 0.3, "type": "Midterm Exam", "drop_count": 0, "short_label": "Midterm"}, {"min_count": 1, "weight": 0.4, "type": "Final Exam", "drop_count": 0, "short_label": "Final"}]}</gradingpolicy>
      <policy>{"course/2013_Spring": {"tabs": [{"type": "courseware"}, {"type": "course_info", "name": "Course Info"}, {"type": "textbooks"}, {"type": "discussion", "name": "Discussion"}, {"type": "wiki", "name": "Wiki"}, {"type": "progress", "name": "Progress"}], "display_name": "Chen's Physics Toy Course", "discussion_topics": {"General": {"id": "i4x-MITX-CPT101-course-2013_Spring"}}}}</policy>
    </policies>
    <policies semester="assets.json"/>
    <about>
      <file filename="overview.html"/>
    </about>
  </metadata>
  <course display_name="Chen's Physics Toy Course" org="MITX" course="CPT101" url_name_orig="2013_Spring" semester="2013_Spring">
    <chapter display_name="Introduction to Toy Course" start="2013-09-01T23:00:00Z">
      <sequential display_name="Purpose of this course">
        <vertical display_name="Unit 1">
          <html display_name="9a2519e6ad19482786228360486c7c91">
            <body>
              <p>This course is created solely for the purpose of getting familiar with Studio, and finding out what can/cannot be done through Studio, how easy it is for people to collaborate via Studio, etc.&#xA0;</p>
            </body>
          </html>
          <problem display_name="Problem with Adaptive Hint" markdown="null" source_code="\subsection{Problem With Adaptive Hint}&#10;&#10;% Adaptive hints are messages provided to students which depend on&#10;% student input.  These hints are produced using a script embedded&#10;% within the problem (written in Python).  &#10;%&#10;% Here is an example.  This example uses LaTeX as a high-level&#10;% soure language for the problem.  The problem can also be coded&#10;% directly in XML.&#10;&#10;This problem demonstrates a question with hints, based on using the&#10;{\tt hintfn} method.&#10;&#10;\begin{edXscript}&#10;def test_str(expect, ans):&#10;  print expect, ans&#10;  ans = ans.strip(&quot;'&quot;)&#10;  ans = ans.strip('&quot;')&#10;  return expect == ans.lower()&#10;&#10;def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):&#10;  aid = answer_ids[0]&#10;  ans = str(student_answers[aid]).lower()&#10;  print 'hint_fn called, ans=', ans&#10;  hint = ''&#10;  if 'java' in ans:&#10;     hint = 'that is only good for drinking'&#10;  elif 'perl' in ans:&#10;     hint = 'not that rich'&#10;  elif 'pascal' in ans:&#10;     hint = 'that is a beatnick language'&#10;  elif 'fortran' in ans:&#10;     hint = 'those were the good days'&#10;  elif 'clu' in ans:&#10;     hint = 'you must be invariant'&#10;  if hint:&#10;    hint = &quot;&lt;font color='blue'&gt;Hint: {0}&lt;/font&gt;&quot;.format(hint)&#10;    new_cmap.set_hint_and_mode(aid,hint,'always')&#10;\end{edXscript}&#10;        &#10;What is the best programming language that exists today?   You may&#10;enter your answer in upper or lower case, with or without quotes.&#10;&#10;\edXabox{type=&quot;custom&quot; cfn='test_str' expect='python' hintfn='hint_fn'}&#10;">
            <text>
              <p>
                <h4>Problem With Adaptive Hint</h4>
              </p>
              <p>
This problem demonstrates a question with hints, based on using the <tt class="tt">hintfn</tt> method. </p>
              <script type="text/python" system_path="python_lib">
def test_str(expect, ans):
  print expect, ans
  ans = ans.strip("'")
  ans = ans.strip('"')
  return expect == ans.lower()

def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid]).lower()
  print 'hint_fn called, ans=', ans
  hint = ''
  if 'java' in ans:
     hint = 'that is only good for drinking'
  elif 'perl' in ans:
     hint = 'not that rich'
  elif 'pascal' in ans:
     hint = 'that is a beatnick language'
  elif 'fortran' in ans:
     hint = 'those were the good days'
  elif 'clu' in ans:
     hint = 'you must be invariant'
  if hint:
    hint = "&lt;font color='blue'&gt;Hint: {0}&lt;/font&gt;".format(hint)
    new_cmap.set_hint_and_mode(aid,hint,'always')
</script>
              <p>
What is the best programming language that exists today? You may enter your answer in upper or lower case, with or without quotes. </p>
              <p>
                <customresponse cfn="test_str" expect="python">
                  <textline correct_answer="python"/>
                  <hintgroup hintfn="hint_fn"/>
                </customresponse>
              </p>
            </text>
          </problem>
          <discussion url_name="52b38c1cef3a48b58e6eb8ce2d5c2223"/>
          <problem display_name="Multiple Choice" markdown="A multiple choice problem presents radio buttons for student input. Students can only select a single &#10;option presented. Multiple Choice questions have been the subject of many areas of research due to the early invention and adoption of bubble sheets.&#10;&#10;One of the main elements that goes into a good multiple choice question is the existence of good distractors. &#10;That is, each of the alternate responses presented to the student should be the result of a plausible mistake &#10;that a student might make.&#10;&#10;What Apple device competed with the portable CD player?&#10;     ( ) The iPad&#10;     ( ) Napster&#10;     (x) The iPod&#10;     ( ) The vegetable peeler&#10;     &#10;[explanation]&#10;The release of the iPod allowed consumers to carry their entire music library with them in a &#10;format that did not rely on fragile and energy-intensive spinning disks.&#10;[explanation]&#10;">
            <p>A multiple choice problem presents radio buttons for student input. Students can only select a single </p>
            <p>option presented. Multiple Choice questions have been the subject of many areas of research due to the early invention and adoption of bubble sheets.</p>
            <p>One of the main elements that goes into a good multiple choice question is the existence of good distractors. </p>
            <p>That is, each of the alternate responses presented to the student should be the result of a plausible mistake </p>
            <p>that a student might make.</p>
            <p>What Apple device competed with the portable CD player?</p>
            <multiplechoiceresponse>
              <choicegroup type="MultipleChoice">
                <choice correct="false">The iPad</choice>
                <choice correct="false">Napster</choice>
                <choice correct="true">The iPod</choice>
                <choice correct="false">The vegetable peeler</choice>
              </choicegroup>
            </multiplechoiceresponse>
            <solution>
              <div class="detailed-solution">
                <p>Explanation</p>
                <p>The release of the iPod allowed consumers to carry their entire music library with them in a </p>
                <p>format that did not rely on fragile and energy-intensive spinning disks.</p>
              </div>
            </solution>
          </problem>
        </vertical>
        <vertical display_name="Unit 2: Images">
          <html display_name="d3fe03a3f78d46b3be17c9e7dab21d70">
            <body>
              <h1>This unit tries to find out how different units look in the course preview interface.</h1>
              <p>
                <img alt="" src="/static/Koala.jpg"/>
              </p>
              <p>"Hi! I'm a Koala!"</p>
              <p>&#xA0;</p>
              <p>I think it is possible for one to upload html5 animations to the text, just need to start with the simple thing.s</p>
            </body>
          </html>
          <discussion url_name="329e40f3356842fab8155cd4d4124ce3"/>
          <html filename="ad421963a6de4f438dcaa6440157af42" display_name="ad421963a6de4f438dcaa6440157af42"/>
        </vertical>
      </sequential>
      <sequential display_name="New Problem Proving Ground"/>
      <sequential display_name="Test Drag and Drop of Unit" format="Homework" graded="true"/>
    </chapter>
    <chapter display_name="Prototype DPP Items">
      <sequential display_name="Conceptual Questions" start="2013-11-01T00:00:00Z">
        <vertical display_name="Moving Elevator">
          <problem display_name="Moving Elevator 1" markdown="null">
            <p> A block of mass <em>m</em> is hanging in an elevator with a massless string. The elevator can move up and down. For each type of motion, determine the relative magnitude of the tension in the massless rope by dragging the apppropriate force vector onto the graph.</p>
            <customresponse>
              <drag_and_drop_input img="/static/DPP-Concpt-MvElvt01-Trgt.PNG" target_outline="true" one_per_target="true" no_labels="false">
                <draggable id="gtmg" icon="/static/DPP-Concpt-MvElvt-Drgbl-02.png" can_reuse="true"/>
                <draggable id="eqmg" icon="/static/DPP-Concpt-MvElvt-Drgbl-01.png" can_reuse="true"/>
                <draggable id="ltmg" icon="/static/DPP-Concpt-MvElvt-Drgbl-03.png" can_reuse="true"/>
                <target id="force1" x="124" y="60" w="63" h="40"/>
                <target id="force2" x="466" y="310" w="63" h="40"/>
              </drag_and_drop_input>
              <answer type="loncapa/python">
          
correct_answer = [
          {'draggables': ['ltmg'],'targets': ['force1'],'rule':'exact'},
          
          {'draggables': ['gtmg'],'targets': ['force2'],'rule':'exact'}
          ]
          
if draganddrop.grade(submission[0], correct_answer):
    correct = ['correct']
else:
    correct = ['incorrect']
        </answer>
            </customresponse>
          </problem>
          <problem markdown="null" display_name="971463d7b1e3475e900fb4faf08fa8d4"><p><em>Problem Instruction</em></p>
  
   Problem body goes here
  
   <customresponse><drag_and_drop_input img="/static/DPP-Concpt-BlkonRmp-Trgt.png" target_outline="true" one_per_target="true" no_labels="false"><draggable id="NotForce" icon="/static/DPP-Concpt-BlkonRmp-Drgbl-NOTF.png" can_reuse="true"/><draggable id="RevDir" icon="/static/DPP-Concpt-BlkonRmp-Drgbl-RevDir.png" can_reuse="true"/><draggable id="Norm" icon="/static/DPP-Concpt-BlkonRmp-Drgbl-Norm.png" can_reuse="true"/><draggable id="Pull" icon="/static/DPP-Concpt-BlkonRmp-Drgbl-Pull.png" can_reuse="true"/><draggable id="Fric" icon="/static/DPP-Concpt-BlkonRmp-Drgbl-Fric.png" can_reuse="true"/><draggable id="Fric" icon="/static/DPP-Concpt-BlkonRmp-Drgbl-Grvty.png" can_reuse="true"/><target id="cue1" x="0" y="0" w="380" h="25"/></drag_and_drop_input><answer type="loncapa/python">
          
        correct_answer = [{'draggables': ['no'],'targets': ['cue1'],'rule':'exact'}]
          
        if draganddrop.grade(submission[0], correct_answer):
          correct = ['correct']
        else:
          correct = ['incorrect']
        </answer></customresponse>

  
  <solution><img src="/static/Feedback_to_1.png" width="500"/><p>
    	Some Solution.
    </p></solution>


</problem>
        </vertical>
      </sequential>
      <sequential display_name="Identify Inconsistency"/>
    </chapter>
  </course>
</xbundle>
